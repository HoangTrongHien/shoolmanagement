// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SchoolManagement.Data;

#nullable disable

namespace SchoolManagement.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250424081441_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.26")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("SchoolManagement.Models.Entities.Account", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("SchoolManagement.Models.Entities.Attendance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("OccurDate")
                        .HasColumnType("int");

                    b.Property<int>("OnTeachClassId")
                        .HasColumnType("int");

                    b.Property<int>("SubscriptionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OnTeachClassId");

                    b.HasIndex("SubscriptionId");

                    b.ToTable("Attendances");
                });

            modelBuilder.Entity("SchoolManagement.Models.Entities.OnTeachClass", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ScheduleId")
                        .HasColumnType("int");

                    b.Property<string>("Semester")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SubjectId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ScheduleId");

                    b.HasIndex("SubjectId");

                    b.ToTable("OnTeachClasses");
                });

            modelBuilder.Entity("SchoolManagement.Models.Entities.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("DateofBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Persons");
                });

            modelBuilder.Entity("SchoolManagement.Models.Entities.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Role");
                });

            modelBuilder.Entity("SchoolManagement.Models.Entities.Schedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.HasKey("Id");

                    b.ToTable("Schedules");
                });

            modelBuilder.Entity("SchoolManagement.Models.Entities.ScheduleInformation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ScheduleId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Time")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ScheduleId");

                    b.ToTable("ScheduleInformations");
                });

            modelBuilder.Entity("SchoolManagement.Models.Entities.Subject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Subjects");
                });

            modelBuilder.Entity("SchoolManagement.Models.Entities.Subscription", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("OnTeachClassId")
                        .HasColumnType("int");

                    b.Property<int?>("PersonId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("OnTeachClassId");

                    b.HasIndex("PersonId");

                    b.ToTable("Subscriptions");
                });

            modelBuilder.Entity("SchoolManagement.Models.Entities.Account", b =>
                {
                    b.HasOne("SchoolManagement.Models.Entities.Person", "Person")
                        .WithOne("Account")
                        .HasForeignKey("SchoolManagement.Models.Entities.Account", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Person");
                });

            modelBuilder.Entity("SchoolManagement.Models.Entities.Attendance", b =>
                {
                    b.HasOne("SchoolManagement.Models.Entities.OnTeachClass", "OnTeachClass")
                        .WithMany("Attendances")
                        .HasForeignKey("OnTeachClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SchoolManagement.Models.Entities.Subscription", "Subscription")
                        .WithMany("Attendances")
                        .HasForeignKey("SubscriptionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("OnTeachClass");

                    b.Navigation("Subscription");
                });

            modelBuilder.Entity("SchoolManagement.Models.Entities.OnTeachClass", b =>
                {
                    b.HasOne("SchoolManagement.Models.Entities.Schedule", "Schedule")
                        .WithMany("OnTeachClasses")
                        .HasForeignKey("ScheduleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SchoolManagement.Models.Entities.Subject", "Subject")
                        .WithMany("OnTeachClasses")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Schedule");

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("SchoolManagement.Models.Entities.Person", b =>
                {
                    b.HasOne("SchoolManagement.Models.Entities.Role", "Role")
                        .WithMany("Persons")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("SchoolManagement.Models.Entities.ScheduleInformation", b =>
                {
                    b.HasOne("SchoolManagement.Models.Entities.Schedule", "Schedule")
                        .WithMany("ScheduleInformations")
                        .HasForeignKey("ScheduleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Schedule");
                });

            modelBuilder.Entity("SchoolManagement.Models.Entities.Subscription", b =>
                {
                    b.HasOne("SchoolManagement.Models.Entities.Account", "Account")
                        .WithMany("Subscriptions")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SchoolManagement.Models.Entities.OnTeachClass", "OnTeachClass")
                        .WithMany("Subscriptions")
                        .HasForeignKey("OnTeachClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SchoolManagement.Models.Entities.Person", null)
                        .WithMany("StudentSubscriptions")
                        .HasForeignKey("PersonId");

                    b.Navigation("Account");

                    b.Navigation("OnTeachClass");
                });

            modelBuilder.Entity("SchoolManagement.Models.Entities.Account", b =>
                {
                    b.Navigation("Subscriptions");
                });

            modelBuilder.Entity("SchoolManagement.Models.Entities.OnTeachClass", b =>
                {
                    b.Navigation("Attendances");

                    b.Navigation("Subscriptions");
                });

            modelBuilder.Entity("SchoolManagement.Models.Entities.Person", b =>
                {
                    b.Navigation("Account")
                        .IsRequired();

                    b.Navigation("StudentSubscriptions");
                });

            modelBuilder.Entity("SchoolManagement.Models.Entities.Role", b =>
                {
                    b.Navigation("Persons");
                });

            modelBuilder.Entity("SchoolManagement.Models.Entities.Schedule", b =>
                {
                    b.Navigation("OnTeachClasses");

                    b.Navigation("ScheduleInformations");
                });

            modelBuilder.Entity("SchoolManagement.Models.Entities.Subject", b =>
                {
                    b.Navigation("OnTeachClasses");
                });

            modelBuilder.Entity("SchoolManagement.Models.Entities.Subscription", b =>
                {
                    b.Navigation("Attendances");
                });
#pragma warning restore 612, 618
        }
    }
}
